name: pip installation tests

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/pip.yaml'
  schedule:
    - cron: '0 6 * * *'
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/pip.yaml'

jobs:
  install_and_check:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: [3.7, 3.8, 3.9.13, 3.10.6]
        pip-version: [20.3.4, 21.3.1, 22.3.0, 23.0.1]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set pip version
        run: python -m pip install --force-reinstall pip==${{matrix.pip-version}} wheel
      - name: install rpafw
        run: |
          # todo: add rest of packages
          python -m pip install rpaframework-recognition robotframework-browser rpaframework-aws rpaframework-google
      - name: test install is correct
        run: |
          python -m pip check
          python -c "import RPA"
          # TODO: run whole test suite here
      - name: create pip freeze file
        run: |
          # show it in CI log
          python -m pip freeze
          python -m pip freeze > requirements.txt
      - name: check freeze file
        run: |
          python -m pip install pip-audit==2.4.14
          python -m pip_audit -r requirements.txt
      - uses: actions/upload-artifact@v3
        if: success() ||Â failure()
        with:
          name: pip_freeze
          path: requirements.txt

