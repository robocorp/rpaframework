name: rpaframework-hubspot

on:
  push:
    branches:
      - master
    paths:
      - 'packages/hubspot/**'
      - '.github/workflows/hubspot.yaml'
  pull_request:
    branches:
      - master
    paths:
      - 'packages/hubspot/**'
      - '.github/workflows/hubspot.yaml'

defaults:
  run:
    working-directory: './packages/hubspot'

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        name: [
            "windows-py39",
            "windows-py310",
            "windows-py311",
            "ubuntu-py39",
            "ubuntu-py310",
            "ubuntu-py311",
            "macos-py39",
            "macos-py310",
            "macos-py311",
        ]

        include:
          - name: "windows-py39"
            python: "3.9"
            os: windows-latest
          - name: "windows-py310"
            python: "3.10"
            os: windows-latest
          - name: "windows-py311"
            python: "3.11"
            os: windows-latest
          - name: "ubuntu-py39"
            python: "3.9"
            os: ubuntu-latest
          - name: "ubuntu-py310"
            python: "3.10"
            os: ubuntu-latest
          - name: "ubuntu-py311"
            python: "3.11"
            os: ubuntu-latest
          - name: "macos-py39"
            python: "3.9"
            os: macos-13
          - name: "macos-py310"
            python: "3.10"
            os: macos-13
          - name: "macos-py311"
            python: "3.11"
            os: macos-13

    env:
      INVOKE_IS_CI_CD: 1
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Install uv
      run: pip install uv
    - name: Install invocation prerequisites
      run: pip install -Ur ../../invocations/requirements.txt
    - name: Get python version
      id: full-python-version
      shell: bash
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info[:3]))")
    - name: Set up cache
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('uv.lock') }}
    - name: Install invocation package
      run: invoke install-invocations || invoke self.install-invocations
    - name: Install dependencies
      run: invoke install
    - name: Lint
      run: invoke code.lint -e
    - name: Test
      run: invoke code.test -a

  # publish:
  #   # Only publish on master workflow runs
  #   if: github.ref == 'refs/heads/master'
  #   needs: test
  #   runs-on: ubuntu-latest
  #   env:
  #     INVOKE_IS_CI_CD: 1

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: '3.9'
  #   - name: Upgrade pip
  #     run: python -m pip install --upgrade pip
  #   - name: Install invocation prerequisites
  #     run: pip install -Ur ../../invocations/requirements.txt
  #   - name: Install invocation package
  #     run: invoke install-invocations || invoke self.install-invocations
  #   - name: Install dependencies
  #     run: invoke install
  #   - name: Build and publish package
  #     if: success()
  #     run: |
  #       invoke install.setup-poetry --devpi-url ${{ secrets.devpiUrl }} --username ci --password ${{ secrets.devpiPassword }}
  #       invoke build.publish --ci --version=prerelease --yes-to-all
