[tool.poetry]
name = "rpaframework-assistant"
version = "3.0.2"
description = "Interactive UI library for RPA Framework"
authors = ["RPA Framework <rpafw@robocorp.com>"]
license = "Apache-2.0"
readme = "README.rst"

homepage = "https://rpaframework.org/"
documentation = "https://rpaframework.org/"
repository = "https://github.com/robocorp/rpaframework"

keywords = ["robotframework", "rpa", "automation", "dialogs", "assistant"]
classifiers = [
	"License :: OSI Approved :: Apache Software License",
	"Development Status :: 5 - Production/Stable",
	"Operating System :: OS Independent",
	"Intended Audience :: Developers",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Software Development :: Libraries",
	"Framework :: Robot Framework :: Library",
	"Framework :: Robot Framework",
	"Programming Language :: Python :: 3.8",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
]

include = ["*.libspec"]

packages = [{ include = "RPA", from = "src" }]

[tool.poetry.dependencies]
python = "^3.8"
robotframework = ">=4.0.0,!=4.0.1,!=6.1.0,<7.0.0"
# Flet needs `packaging>=23`. Earlier rpaframework-core versions don't allow
# installing it. This make resolution errors simpler and faster.
rpaframework-core = "^11.0.0"
flet="0.4.2"
# We only need the Literal type on python 3.7 from the module, but it has to be
# installed on all pythons so the imports work
typing-extensions = { version = "^4.4.0" }


[tool.poetry.group.dev.dependencies]
black = "^22.3.0"
flake8 = "^3.7.9"
pylint = "^2.4.4, <2.13"
pytest = "^7.2.0"
mock = "^5.0.0"
pytest-cov = "^4.0.0"
invoke = "^2.2.0"
toml = "^0.10.2"
robotframework-tidy = "^3.3.3"
robotframework-docgen = "^0.16.0"
colorama = "^0.4.5"
keyring = "^24.2.0"
PyYAML = ">=5.4.1,<7.0.0"
importlib-metadata = "^4.13.0"
flake8-docstrings = "^1.6.0"
flake8-rst-docstrings = "^0.2.7"

[tool.black]
target-version = ["py38", "py39", "py310"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-v --cov=src --cov-report term-missing --cov-branch"
testpaths = ["tests"]

filterwarnings = [
  # Ignore `pkg_resources.declare_namespace` that gets raised by dependencies
  # when running pytest
  "ignore:.*pkg_resources\\.declare_namespace.*:DeprecationWarning",
]
