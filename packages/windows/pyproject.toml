[tool.poetry]
name = "rpaframework-windows"
version = "7.3.2"
description = "Windows library for RPA Framework"
authors = ["RPA Framework <rpafw@robocorp.com>"]
license = "Apache-2.0"
readme = "README.rst"

homepage = "https://rpaframework.org/"
documentation = "https://rpaframework.org/"
repository = "https://github.com/robocorp/rpaframework"

keywords = ["robotframework", "rpa", "automation", "windows", "uiautomation"]
classifiers = [
	"License :: OSI Approved :: Apache Software License",
	"Development Status :: 5 - Production/Stable",
	"Operating System :: Microsoft :: Windows",
	"Intended Audience :: Developers",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Software Development :: Libraries",
	"Framework :: Robot Framework :: Library",
	"Framework :: Robot Framework",
	"Programming Language :: Python :: 3.7",
	"Programming Language :: Python :: 3.8",
	"Programming Language :: Python :: 3.9",
]

include = ["*.libspec"]

packages = [{ include = "RPA", from = "src" }]

[tool.poetry.dependencies]
python = "^3.7"
dataclasses = { version = "^0.7", python = ">=3.6,<3.7" }
rpaframework-core = "^11.0.0"
robotframework = ">=4.0.0,!=4.0.1,<6.0.0"
robotframework-pythonlibcore = "^4.0.0"
pynput-robocorp-fork = "^5.0.0"
uiautomation = "^2.0.15"
comtypes = { version = "^1.1.11", platform = "win32" }
psutil = { version = "^5.9.0", platform = "win32" }
pywin32 = { version = ">=300,<304", platform = "win32", python = "!=3.8.1,!=3.7.6" }
fire = "^0.4.0"

[tool.poetry.group.dev.dependencies]
black = "^22.3.0"
flake8 = "^3.7.9"
pylint = "^2.4.4, <2.13"
pytest = "^7.2.0"
mock = "^5.0.0"
pytest-cov = "^4.0.0"
invoke = "^1.6.0"
sphinx = "^5.3.0"
sphinx-rtd-theme = "^1.1.1"
toml = "^0.10.2"
sphinx-markdown-builder = "^0.5.4"
robotframework-docgen = "^0.15.0"
sphinx-issues = "^3.0.1"
docutils = "0.16"
colorama = "^0.4.5"
keyring = "^23.9.0"
PyYAML = "^5.4.1"
flake8-docstrings = "^1.6.0"
flake8-rst-docstrings = "^0.2.7"

[tool.poetry.scripts]
windows-record = 'RPA.scripts.record:main'

[tool.black]
target-version = ["py37", "py38", "py39"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
addopts = "-v --cov=src --cov-report term-missing --cov-branch"
testpaths = ["tests"]
