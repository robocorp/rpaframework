[tool.poetry]
name = "rpaframework-windows"
version = "2.3.2"
description = "Windows library for RPA Framework"
authors = [
	"RPA Framework <rpafw@robocorp.com>",
]
license = "Apache-2.0"
readme = "README.rst"

homepage = "https://rpaframework.org/"
documentation = "https://rpaframework.org/"
repository = "https://github.com/robocorp/rpaframework"

keywords = ["robotframework", "rpa", "automation", "google"]
classifiers = [
	"License :: OSI Approved :: Apache Software License",
	"Development Status :: 3 - Alpha",
	"Operating System :: OS Independent",
	"Intended Audience :: Developers",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Software Development :: Libraries",
	"Framework :: Robot Framework :: Library",
	"Framework :: Robot Framework",
	"Programming Language :: Python :: 3.6",
	"Programming Language :: Python :: 3.7",
	"Programming Language :: Python :: 3.8",
]

include = ["*.libspec"]

packages = [
	{ include = "RPA", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.6.2"
dataclasses = { version = "^0.7", python=">=3.6,<3.7" }
rpaframework-core = "^6.6.2"
robotframework = ">=4.0.0,!=4.0.1,<5.0.0"
robotframework-pythonlibcore = "^3.0.0"
pynput-robocorp-fork = "^4.0.0"
uiautomation = "^2.0.15"
comtypes = { version = "1.1.11", platform = "win32" }
psutil = { version = "^5.9.0", platform = "win32" }
pywin32 = { version = ">=300,<304", platform = "win32", python = "!=3.8.1,!=3.7.6" }
pillow = "^8.4.0"
fire = "^0.4.0"

[tool.poetry.dev-dependencies]
black = {version = "^21.5b0", allow-prereleases = true}
flake8 = "^3.7.9"
pylint = "^2.6.0"
pytest = "^6.1.2"
mock = "^4.0.2"
pytest-cov = "^2.10.1"
invoke = "^1.6.0"
sphinx = "^2.3.1"
sphinx_rtd_theme = "^0.4.3"
toml = "^0.10.1"
sphinx-markdown-builder = "^0.5.4"
robotframework-docgen = "^0.14.0"
sphinx-issues = "^1.2.0"
docutils = "0.16"

[tool.poetry.scripts]
windows-record = 'RPA.scripts.record:main'

[tool.black]
target-version = ["py36", "py37", "py38", "py39"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
addopts = "-v --cov=src --cov-report term-missing --cov-branch"
testpaths = ["tests"]
